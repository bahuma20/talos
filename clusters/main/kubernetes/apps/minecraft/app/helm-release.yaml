apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minecraft
  namespace: minecraft
spec:
  interval: 15m
  chart:
    spec:
      chart: minecraft-java
      version: 22.54.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    TZ: Europe/Berlin
    podOptions:
      hostUsers: true
    webImage:
      repository: ghcr.io/bahuma20/noitl-craft
      tag: v0.6.3@sha256:1471e27c1e9513e9658843b2a9ce7bbbca5d3f285c213cd6a9fef586be301a27
      pullPolicy: Always
    credentials:
      storj:
        type: s3
        name: storj
        url: https://gateway.storjshare.io
        accessKey: ${STORJ_ACCESS_KEY}
        secretKey: ${STORJ_SECRET_KEY}
        bucket: ${STORJ_BUCKET}
        encrKey: ${STORJ_VOLSYNC_ENCRYPTION_KEY}
        path: ""
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${MINECRAFT_IP}
      livemap:
        enabled: true
        primary: false
        ports:
          livemap:
            enabled: true
            protocol: tcp
            port: 8123
            targetPort: 8123
        targetSelector: main
      metrics:
        enabled: true
        primary: false
        ports:
          z-metrics:
            enabled: true
            protocol: tcp
            port: 9940
            targetPort: 9940
        targetSelector: main
      web:
        enabled: true
        primary: false
        ports:
          main:
            enabled: true
            protocol: tcp
            port: 80
            targetPort: 8080
        targetSelector: web

    ingressMiddlewares:
      traefik:
        livemap-remove-prefix:
          enabled: true
          type: strip-prefix
          data:
            prefix:
              - /livemap

    ingress:
      main:
        enabled: true
        hosts:
          - host: craft.noitl.space
            paths:
              - path: /
                pathType: Prefix
        targetSelector:
          web: main
        integrations:
          certManager:
            enabled: true
            certificateIssuer: ${CERTMANAGER_ISSUER}
          traefik:
            enabled: true
          homepage:
            enabled: true
            group: Sonstiges
      livemap:
        enabled: true
        primary: false
        hosts:
          - host: craft-map.noitl.space
            paths:
              - path: /
                pathType: Prefix
        targetSelector:
          livemap: livemap
        integrations:
          certManager:
            enabled: true
            certificateIssuer: ${CERTMANAGER_ISSUER}
          traefik:
            enabled: true
          homepage:
            enabled: false
    serviceAccount:
      main:
        enabled: true
        primary: true
        targetSelectAll: true

    rbac:
      main:
        enabled: true
        primary: true
        clusterWide: true
        serviceAccounts:
          - main
        rules:
          - apiGroups: [ "" ]
            resources: [ "services" ]
            verbs: [ "watch","list" ]
          - apiGroups: [ "apps" ]
            resources: [ "statefulsets", "statefulsets/scale" ]
            verbs: [ "watch","list","get","update","patch" ]

    persistence:
      backups:
        enabled: false
      data:
        targetSelector:
          main:
            main:
              mountPath: /data
          backup:
            main:
              mountPath: /backup-source
              readOnly: true
      backup-target:
        enabled: true
        type: nfs
        server: ${NFS_HOST}
        path: /mnt/pool1/backup/backup-minecraft
        readOnly: false
        autoPermissions:
          enabled: false
        targetSelector:
          backup:
            main:
              mountPath: /backup-target
      web-var:
        enabled: true
        type: "emptyDir"
        medium: Memory
        size: 150Mi
        targetSelector:
          web:
            main:
              mountPath: /var/www/html/var
              readOnly: false
      web-symfony:
        enabled: true
        type: "emptyDir"
        medium: Memory
        size: 150Mi
        targetSelector:
          web:
            main:
              mountPath: /.symfony5
              readOnly: false

    workload:
      main:
        type: StatefulSet
        podSpec:
          containers:
            main:
              env:
                TYPE: "PAPER"
                VERSION: "1.21.4"
                PAPER_BUILD: "82"
                MOTD: "Happy Noitln und Craften"
                SERVER_NAME: "Noitl.Craft"
                ENABLE_WHITELIST: true
                RCON_PASSWORD: ${MINECRAFT_RCON_PASSWORD}
                PVP: true
                MAX_WORLD_SIZE: ""
                MEMORY: 6144M
            mcbackup:
              enabled: false
      backup:
        enabled: true
        primary: false
        type: CronJob
        schedule: "0 3 * * *"
        concurrentPolicy:
        podSpec:
          restartPolicy: Never
          containers:
            main:
              enabled: true
              primary: true
              imageSelector: mcBackupImage
              probes:
                liveness:
                  enabled: false
                readiness:
                  enabled: false
                startup:
                  enabled: false
              env:
                SERVER_PORT: "{{ .Values.service.main.ports.main.port }}"
                RCON_HOST: '{{ printf "%s-rcon" (include "tc.v1.common.lib.chart.names.fullname" $) }}'
                RCON_PORT: "{{ .Values.service.rcon.ports.rcon.port }}"
                RCON_PASSWORD: "{{ .Values.workload.main.podSpec.containers.main.env.RCON_PASSWORD }}"
                SERVER_HOST: '{{ include "tc.v1.common.lib.chart.names.fullname" $ }}'
              command:
                - "sh"
                - "-c"
              args:
                - |
                  echo "RCON save-off"
                  rcon-cli save-off
                  echo "RCON save-all flush"
                  rcon-cli save-all flush
                  echo "Copying files from /backup-source to /backup-target"
                  rsync -avP --delete --exclude='.cache' --exclude='cache' --exclude='logs' --exclude='*.tmp' --exclude='plugins/dynmap/web/tiles' /backup-source/ /backup-target
                  echo "RCON save-on"
                  rcon-cli save-on
      web:
        enabled: true
        primary: false
        type: Deployment
        podSpec:
          automountServiceAccountToken: true
          terminationGracePeriodSeconds: 5
          containers:
            main:
              enabled: true
              primary: true
              imageSelector: webImage
              probes:
                liveness:
                  enabled: false
                readiness:
                  enabled: false
                startup:
                  enabled: false
              env:
                APP_ENV: prod
                APP_SECRET: ${MINECRAFT_WEB_SECRET}
                APP_KUBERNETES_NAMESPACE: minecraft
                APP_KUBERNETES_STATEFULSET_NAME: minecraft-minecraft-java
                APP_MINECRAFT_SERVER_ADDRESS: minecraft-minecraft-java.minecraft.svc.cluster.local
                APP_MINECRAFT_SERVER_PORT: 25565
    metrics:
      main:
        enabled: true
        type: servicemonitor
        endpoints:
          - port: z-metrics
            path: /metrics
        targetSelector: main
    resources: {}