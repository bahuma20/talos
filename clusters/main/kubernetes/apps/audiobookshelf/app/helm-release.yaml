apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: audiobookshelf
    namespace: audiobookshelf
spec:
    interval: 15m
    chart:
        spec:
            chart: audiobookshelf
            version: 10.1.3
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: audiobookshelf
    values:
        TZ: Europe/Berlin
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        credentials:
            storj:
                type: s3
                name: storj
                url: https://gateway.storjshare.io                
                accessKey: ${STORJ_ACCESS_KEY}                
                secretKey: ${STORJ_SECRET_KEY}
                bucket: ${STORJ_BUCKET}
                encrKey: ${STORJ_VOLSYNC_ENCRYPTION_KEY}
                path: ""
                
        ingress:
            main:
                enabled: true
                hosts:
                    - host: audiobooks.base.noitl.space
                      paths:
                        - path: /
                          pathType: Prefix
                ingressClassName: ""
                integrations:
                    certManager:
                        certificateIssuer: letsencrypt-prod-hetzner
                        enabled: true
                    homepage:
                        description: ""
                        enabled: false
                        group: Medien
                        icon: ""
                        name: ""
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
        persistence:
            audiobooks:
                autoPermissions:
                    enabled: false
                enabled: true
                mountPath: /audiobooks
                path: /mnt/pool1/Medien/Audiobooks
                readOnly: true
                server: ${NFS_HOST}
                type: nfs
            config:
                enabled: true
                mountPath: /config
                readOnly: false
                storageClass: ""
                volsync:
                    - credentials: storj
                      dest:
                        enabled: true
                      name: app-config
                      src:
                        enabled: true
                      type: restic
            metadata:
                enabled: true
                mountPath: /metadata
                readOnly: false
                storageClass: ""
                volsync:
                    - credentials: storj
                      dest:
                        enabled: true
                      name: metadata
                      src:
                        enabled: true
                      type: restic
        release_name: audiobookshelf
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: false
                runAsUser: 0
            pod:
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                loadBalancerIP: ""
                ports:
                    main:
                        port: 10223
                type: LoadBalancer
        workload:
            main:
                podSpec:
                    containers:
                        main:
                            env:
                                AUDIOBOOKSHELF_GID: '{{ .Values.securityContext.pod.fsGroup }}'
                                AUDIOBOOKSHELF_UID: '{{ .Values.securityContext.container.PUID }}'
                                PORT: '{{ .Values.service.main.ports.main.port }}'
                                TOKEN_SECRET:
                                    secretKeyRef:
                                        key: TOKEN_SECRET
                                        name: secrets
                            probes:
                                liveness:
                                    path: /ping
                                readiness:
                                    path: /ping
                                startup:
                                    path: /ping
                replicas: 1
                type: Deployment
